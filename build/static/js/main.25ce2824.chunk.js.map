{"version":3,"sources":["components/Button/index.tsx","assets/SpiritIslandLogo.png","components/Logo/index.tsx","components/LobbyPage/index.tsx","config.ts","i18n.ts","components/ButtonLang/index.tsx","components/Input/index.tsx","components/NicknameOverlay/SetupNickname/index.tsx","Game.ts","components/Board/index.tsx","components/CreateGame/index.tsx","components/Lobby/LobbyLink/index.tsx","components/Lobby/index.tsx","components/Welcome/index.tsx","components/App/index.tsx","components/NicknameOverlay/index.tsx","index.tsx","components/Button/style.module.scss","components/LobbyPage/style.module.scss","components/Welcome/style.module.scss","components/Input/style.module.scss"],"names":["Button","React","forwardRef","ref","className","theme","size","props","classNames","style","button","ButtonLink","Logo","src","logo","alt","LobbyPage","children","lobbyPage","SmallLogo","href","smallLogo","GithubLink","githubLink","target","rel","location","window","SERVER_URL","process","PORT","protocol","hostname","origin","SUPPORTED_LANGUAGES","i18n","use","initReactI18next","detector","init","resources","fallbackLng","debug","keySeparator","interpolation","escapeValue","ButtonLang","useTranslation","map","lang","cn","language","split","onClick","changeLanguage","reload","Input","type","input","SetupNicknameRaw","state","nickname","handleChanged","bind","handleSubmit","this","setState","e","preventDefault","onSubmit","Trans","placeholder","t","onChange","value","onBack","SetupNickname","withTranslation","SpiritIsland","name","minPlayers","maxPlayers","SpiritIslandBoard","matchData","CreateGame","trim","requestChangeNickname","onCreateGameRoom","roomID","to","Component","LobbyLink","supportsCopying","tooltipVisible","document","queryCommandSupported","copyToClipboard","setTooltipVisible","textField","createElement","innerText","opacity","body","appendChild","select","execCommand","remove","setTimeout","LobbyStatus","Error","playerData","startRequested","lobbyClient","updatePlayer","matchID","playerID","String","credentials","credential","data","gameStarted","catch","error","alert","console","log","undefined","isCreator","onRequestStart","GameLobbySetupRaw","match","params","id","findSeatAndJoin","join","prevProps","roomMetadata","arPlayerData","Object","entries","players","alreadyJoined","find","p","history","push","delayedStart","joinMatchPromise","joinMatch","playerName","then","joinedRoom","storePlayerData","playerCredentials","emptySeatID","startGame","filter","player","GameLobbySetup","withRouter","timerID","loadRoomMetadata","setInterval","clearInterval","getMatch","Welcome","text","CREDENTIALS_STORAGE_KEY","App","LobbyClient","server","storedCredentials","encodedCredentials","localStorage","getItem","JSON","parse","isRunning","newGame","createMatch","numPlayers","x","reason","activeRoomPlayer","setItem","stringify","roomPage","GameClient","Client","game","board","multiplayer","SocketIO","exact","path","NICKNAME_STORAGE_KEY","NicknameOverlay","savedNickname","changeRequested","setNickname","onRequestChange","resetRequest","newNickname","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.25ce2824.chunk.js","sourcesContent":["import React, { ButtonHTMLAttributes } from \"react\";\nimport classNames from \"classnames\";\nimport style from \"./style.module.scss\";\nimport { Link, LinkProps } from \"react-router-dom\";\n\nexport interface ButtonProps {\n  theme?: \"orange\" | \"yellow\" | \"blue\" | \"green\";\n  size?: \"small\" | \"medium\";\n}\n\nexport const Button = React.forwardRef<\n  HTMLButtonElement,\n  ButtonProps & ButtonHTMLAttributes<HTMLButtonElement>\n>(({ className, theme = \"orange\", size = \"medium\", ...props }, ref) => {\n  return (\n    <button\n      ref={ref}\n      className={classNames(\n        style.button,\n        style[`button--${theme}`],\n        style[`button--size-${size}`],\n        className\n      )}\n      {...props}\n    />\n  );\n});\n\nexport const ButtonLink: React.FC<ButtonProps & LinkProps> = ({\n  className,\n  theme = \"orange\",\n  size = \"medium\",\n  ...props\n}) => {\n  return (\n    <Link\n      className={classNames(\n        style.button,\n        style[`button--${theme}`],\n        style[`button--size-${size}`],\n        className\n      )}\n      {...props}\n    />\n  );\n};\n","export default __webpack_public_path__ + \"static/media/SpiritIslandLogo.49f6bb3e.png\";","import React from \"react\";\nimport logo from \"assets/SpiritIslandLogo.png\";\nimport \"./style.scss\";\nimport classNames from \"classnames\";\n\ninterface Props {\n  size: \"small\" | \"medium\" | \"large\" | \"tiny\";\n  className?: string;\n}\n\nexport const Logo: React.FC<Props> = ({ size, className, ...props }) => {\n  return (\n    <img src={logo} alt=\"Spirit Island Logo\"\n      className={classNames(\"Logo\", `Logo--${size}`, className)}\n      {...props}\n    />\n  );\n};\n","import React, { HTMLAttributes } from \"react\";\nimport style from \"./style.module.scss\";\nimport classNames from \"classnames\";\nimport { Logo } from \"components/Logo\";\n\nexport const LobbyPage: React.FC<HTMLAttributes<HTMLDivElement>> = ({\n  className,\n  children,\n  ...props\n}) => {\n  return (\n    <div className={classNames(style.lobbyPage, className)} {...props}>\n      <GithubLink />\n      {children}\n    </div>\n  );\n};\n\nexport const SmallLogo = () => {\n  return  <a href=\"/\"><Logo size=\"small\" className={style.smallLogo} /></a>;\n};\n\nexport const GithubLink = () => {\n  return (\n    <a\n      className={style.githubLink}\n      href=\"https://github.com/maddinpsy/spiritislandweb\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Github\n    </a>\n  );\n};\n","const location = window.location;\nconst DEFAULT_PORT = process.env.PORT || 8000;\nconst protocol = location.protocol\nconst hostname = location.hostname\nexport const isProduction = process.env.NODE_ENV === \"production\";\n\nexport const SERVER_URL = isProduction\n    ? origin\n    : `${protocol}//${hostname}:${DEFAULT_PORT}`;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport detector from \"i18next-browser-languagedetector\";\nimport { isProduction } from \"config\";\n\n//import enTranslation from \"./locales/en/translation.json\";\n//import plTranslation from \"./locales/pl/translation.json\";\n//import { isProduction } from \"./config\";\n\nexport const SUPPORTED_LANGUAGES = [\"en\"];\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .use(detector)\n  .init({\n    resources: {\n      /*en: {\n        translation: enTranslation,\n      },\n      pl: {\n        translation: plTranslation,\n      },*/\n    },\n    fallbackLng: \"en\",\n    debug: !isProduction,\n    keySeparator: false,\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","import React from \"react\";\nimport cn from \"classnames\";\nimport { useTranslation } from \"react-i18next\";\nimport { SUPPORTED_LANGUAGES } from \"i18n\";\nimport \"./style.scss\";\n\nexport const ButtonLang = () => {\n  const { i18n } = useTranslation();\n\n  return (\n    <div className=\"Lang\">\n      {SUPPORTED_LANGUAGES.map((lang) => (\n        <button\n          key={lang}\n          className={cn(\n            \"Lang__button\",\n            i18n.language.split(\"-\")[0] === lang && \"Lang__button--active\"\n          )}\n          onClick={() => {\n            i18n.changeLanguage(lang);\n            window.location.reload();\n          }}\n        >\n          {lang}\n        </button>\n      ))}\n    </div>\n  );\n};\n","import React, { InputHTMLAttributes } from \"react\";\nimport style from \"./style.module.scss\";\nimport classNames from \"classnames\";\n\nexport const Input: React.FC<InputHTMLAttributes<HTMLInputElement>> = ({\n  type = \"text\",\n  className,\n  ...props\n}) => {\n  return (\n    <input\n      className={classNames(style.input, className)}\n      type={type}\n      {...props}\n    />\n  );\n};\n","import * as React from \"react\";\nimport \"./style.scss\";\nimport { Trans, withTranslation, WithTranslation } from \"react-i18next\";\nimport { Button } from \"components/Button\";\nimport { LobbyPage, SmallLogo } from \"components/LobbyPage\";\nimport { ButtonLang } from \"components/ButtonLang\";\nimport { Input } from \"components/Input\";\n\ninterface SetupNicknameProps {\n  nickname: string,\n  onSubmit: (newNickname: string) => void\n  onBack: () => void\n}\n\ninterface SetupNicknameState {\n  nickname: string\n}\n\nclass SetupNicknameRaw extends React.Component<WithTranslation & SetupNicknameProps, SetupNicknameState>\n{\n  constructor(props: any) {\n    super(props);\n    this.state = { nickname: this.props.nickname || \"\"};\n    this.handleChanged = this.handleChanged.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChanged(nickname: string) {\n    this.setState({ nickname: nickname });\n  }\n\n  handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n    this.props.onSubmit && this.props.onSubmit(this.state.nickname);\n  };\n  render() {\n    return (\n      <LobbyPage>\n        <ButtonLang />\n        <SmallLogo />\n\n        <h3 className=\"SetupNickname__title\">\n          <Trans>Set your nickname</Trans>\n        </h3>\n\n        <form onSubmit={this.handleSubmit} className=\"SetupNickname__form\">\n          <Input\n            placeholder={this.props.t(\"Type in something cool...\")}\n            className=\"SetupNickname__input\"\n            onChange={(e) => this.handleChanged(e.target.value)}\n            value={this.state.nickname}\n          />\n\n          <Button type=\"submit\">\n            <Trans>Save</Trans>\n          </Button>\n          <Button onClick={() => { this.props.onBack() }}> \n          <Trans>Back</Trans>\n          </Button>\n        </form>\n      </LobbyPage>\n    );\n  }\n\n};\n\nexport const SetupNickname = withTranslation()(SetupNicknameRaw)","\nimport { Ctx, Game} from 'boardgame.io';\n\nexport interface SpiritIslandState\n{\n}\n\nexport const SpiritIsland: Game<SpiritIslandState, Ctx> = {\n    name: \"SpiritIsland\",\n    minPlayers: 1,\n    maxPlayers: 99,\n};\n\n","import * as React from \"react\";\nimport backside from 'img/backside.png';\n\nimport { BoardProps } from \"boardgame.io/react\";\nimport { SpiritIslandState } from \"Game\";\nimport classNames from \"classnames\";\nimport style from \"./style.module.scss\";\n\nimport { Button } from \"components/Button\";\n\nexport class SpiritIslandBoard extends React.Component<BoardProps<SpiritIslandState>, any> {\n    render() {\n        if (!this.props.matchData) {\n            return (<div>\"this.props.matchData is not defined.\"</div>);\n        }\n        //mapping from id to name comes from this.props.matchData  \n        return (\n            <div>Hello World</div>\n        );\n    }\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./style.scss\";\nimport { Trans } from \"react-i18next\";\nimport { ButtonLang } from \"components/ButtonLang\";\nimport { Button, ButtonProps } from \"components/Button\";\nimport { LobbyPage, SmallLogo } from \"components/LobbyPage\";\n\ninterface CreateGameProps {\n  onCreateGameRoom: () => void\n  requestChangeNickname: () => void\n  nickname: string\n  roomID?: string\n}\n\nexport class CreateGame extends React.Component<CreateGameProps> {\n\n  constructor(props: CreateGameProps) {\n    super(props);\n    if (props.nickname.trim() === \"\") {\n      props.requestChangeNickname();\n    } else {\n      props.onCreateGameRoom();\n    }\n  }\n\n  render() {\n\n    let roomID = this.props.roomID;\n    if (roomID) return <Redirect to={`/rooms/${roomID}`} />;\n\n    return (\n      <LobbyPage>\n        <SmallLogo />\n        <ButtonLang />\n        <h3 className=\"CreateGame__title\">\n          <Trans>Creating new game...</Trans>\n        </h3>\n      </LobbyPage>\n    );\n  }\n\n}\n","import React from \"react\";\nimport { Button } from \"components/Button\";\nimport { Trans } from \"react-i18next\";\nimport \"./style.scss\";\n\n\nexport class LobbyLink extends React.Component<{}, { tooltipVisible: boolean }>\n{\n  supportsCopying: boolean = false;\n\n  constructor(props: {}) {\n    super(props);\n    this.state = { tooltipVisible: false }\n    this.supportsCopying = !!document.queryCommandSupported(\"copy\");\n    this.copyToClipboard = this.copyToClipboard.bind(this);\n    this.setTooltipVisible = this.setTooltipVisible.bind(this);\n  }\n  copyToClipboard(value: string) {\n    var textField = document.createElement(\"textarea\");\n    textField.innerText = value;\n    textField.style.opacity = \"0\";\n    document.body.appendChild(textField);\n    textField.select();\n    document.execCommand(\"copy\");\n    textField.remove();\n  }\n\n  setTooltipVisible(value: boolean) {\n    this.setState({ tooltipVisible: value });\n  }\n\n  render() {\n    return (\n      <div className=\"LobbyLink__link\" >\n        <div className=\"LobbyLink__link-box\">{window.location.href}</div>\n        { this.supportsCopying && (\n          <div className=\"LobbyLink__link-button\">\n              {this.state.tooltipVisible && (\n              <div className=\"LobbyLink__tooltip\">\n                 <Trans>Copied!</Trans>\n              </div>\n              )}\n            <Button\n              onClick={() => {\n                this.copyToClipboard(window.location.href);\n                this.setTooltipVisible(true);\n                setTimeout(() => this.setTooltipVisible(false), 1500);\n              }}\n            >\n              <Trans>Copy</Trans>\n            </Button>\n          </div>\n        )}\n      </div >\n    )\n  }\n}","import React from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport \"./style.scss\";\nimport { Trans } from \"react-i18next\";\nimport { LobbyPage, SmallLogo } from \"components/LobbyPage\";\nimport { ButtonLang } from \"components/ButtonLang\";\nimport { LobbyLink } from \"./LobbyLink\";\n\nimport { Server } from \"boardgame.io\";\nimport { SpiritIsland } from 'Game';\nimport { LobbyClient } from \"boardgame.io/client\";\nimport { StoredPlayerData } from \"components/App\";\nimport { Button } from \"components/Button\";\n\ninterface LobbyStatusProps {\n  gameStarted: boolean\n  isCreator: boolean\n  matchID: string\n  lobbyClient: LobbyClient\n  playerData?: StoredPlayerData\n}\n\ninterface GameLobbySetupState {\n  startRequested: boolean\n}\n\nclass LobbyStatus extends React.Component<LobbyStatusProps, GameLobbySetupState>\n{\n  onRequestStart() {\n    if (!SpiritIsland.name) {\n      throw new Error(\"IllegalState game name not set\");\n    }\n    if (!this.props.playerData) {\n      throw new Error(\"playerData is undefined, pleas join the game befor starting.\");\n    }\n    this.setState({ startRequested: true });\n    //call server api to cahnge metatdata\n    let updatePlayerPromise = this.props.lobbyClient.updatePlayer(\n      SpiritIsland.name,\n      this.props.matchID,\n      {\n        playerID: String(this.props.playerData.playerID),\n        credentials: this.props.playerData.credential,\n        data: { gameStarted: true }\n      }\n    );\n    //log error\n    updatePlayerPromise.catch(\n      (error) => {\n        alert(\n          \"There was a problem, while starting the game. Please try again.\"\n        );\n        console.log(\"Error starting game:\" + error);\n        return;\n      }\n    );\n  }\n  render() {\n    let button = undefined;\n    if (this.props.isCreator) {\n      button = (\n        <Button onClick={() => { this.onRequestStart() }}>\n          <Trans>Start Game</Trans>\n        </Button>\n      )\n    }\n    return (\n      <div className=\"Lobby__status-message\">\n        {this.props.gameStarted ? (\n          <Trans>Starting Game...</Trans>\n        ) : button}\n      </div>\n    );\n  }\n}\n\ninterface GameLobbySetupBasicProps {\n  nickname: string\n  requestChangeNickname: () => void\n  lobbyClient: LobbyClient\n  playerData?: StoredPlayerData\n  storePlayerData: (activeRoomPlayer: StoredPlayerData) => void\n  startGame: () => void\n}\n\ntype GameLobbySetupProps = GameLobbySetupBasicProps & RouteComponentProps<{ id: string }>\n\n\ninterface RoomMetaDataProps {\n  roomMetadata?: Server.MatchData\n}\n\nfunction RoomMetaDataHOC(Component: React.ComponentType<GameLobbySetupProps & RoomMetaDataProps>) {\n  return class extends React.Component<GameLobbySetupProps, RoomMetaDataProps>\n  {\n    matchID: string;\n    timerID?: number;\n    constructor(props: GameLobbySetupProps) {\n      super(props);\n      //force nickname\n      this.matchID = props.match.params.id;\n      this.state = { roomMetadata: undefined }\n      this.loadRoomMetadata = this.loadRoomMetadata.bind(this);\n    }\n\n    componentDidMount() {\n      this.timerID = window.setInterval(() => this.loadRoomMetadata(), 500);\n    }\n    componentWillUnmount() {\n      if (this.timerID) window.clearInterval(this.timerID);\n    }\n\n\n    loadRoomMetadata(): void {\n      if (!this.matchID) {\n        throw new Error(\"IllegalState matchID not set\");\n      }\n      if (!SpiritIsland.name) {\n        throw new Error(\"IllegalState game name not set\");\n      }\n      this.props.lobbyClient.getMatch(SpiritIsland.name, this.matchID).then(\n        (matchData) => {\n          this.setState({ roomMetadata: matchData })\n        }\n      ).catch((e) => {\n        alert(\n          \"There was a problem. Make sure you have the right url and try again.\"\n        );\n        console.log(\"Error in loadRoomMetadata: \" + e);\n        this.props.history.push(\"/\");\n        return;\n      });\n    }\n\n    render() {\n      return <Component {...this.props} roomMetadata={this.state.roomMetadata} />;\n    }\n  }\n}\n\nclass GameLobbySetupRaw extends React.Component<GameLobbySetupProps & RoomMetaDataProps>\n{\n  matchID: string;\n  gameStarted: boolean = false;\n\n  constructor(props: GameLobbySetupProps) {\n    super(props);\n    //force nickname\n    if (props.nickname.trim() === \"\") {\n      props.requestChangeNickname();\n    }\n    //get matchID from url\n    this.matchID = props.match.params.id;\n    this.findSeatAndJoin = this.findSeatAndJoin.bind(this);\n    this.join = this.join.bind(this);\n  }\n\n  componentDidUpdate(prevProps: GameLobbySetupProps & RoomMetaDataProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.roomMetadata && this.props.roomMetadata !== prevProps.roomMetadata) {\n      this.findSeatAndJoin();\n\n      let arPlayerData = Object.entries(this.props.roomMetadata.players).map(([key, value]) => value);\n      this.gameStarted = this.props.roomMetadata.players[0].data?.gameStarted || false;\n      const alreadyJoined = arPlayerData.find(p => {\n        return p.id === this.props.playerData?.playerID && p.name === this.props.nickname;\n      });\n      if (this.gameStarted) {\n        if (alreadyJoined) {\n          this.delayedStart();\n        } else {\n          alert(\n            \"This game started without you.\"\n          );\n          this.props.history.push(\"/\");\n          return;\n        }\n      }\n    }\n  }\n\n  join(playerID: number) {\n    if (!SpiritIsland.name) {\n      throw new Error(\"IllegalState game name not set\");\n    }\n    //call server api to join\n    let joinMatchPromise = this.props.lobbyClient.joinMatch(SpiritIsland.name, this.matchID, { playerID: String(playerID), playerName: this.props.nickname });\n    //on success: store credentions\n    joinMatchPromise.then(\n      (joinedRoom) => {\n        this.props.storePlayerData({\n          playerID: playerID,\n          credential: joinedRoom.playerCredentials,\n          matchID: this.matchID\n        });\n      }\n    );\n    //log error\n    joinMatchPromise.catch(\n      (error) => {\n        alert(\n          \"There was a problem. Make sure you have the right url and try again.\"\n        );\n        console.log(\"Error joining room:\" + error);\n        this.props.history.push(\"/\");\n        return;\n      }\n    );\n  }\n\n\n  findSeatAndJoin() {\n    if (!this.matchID) {\n      throw new Error(\"IllegalState matchID not set\");\n    }\n    if (!SpiritIsland.name) {\n      throw new Error(\"IllegalState game name not set\");\n    }\n    if (!this.props.roomMetadata) {\n      throw new Error(\"IllegalState roomMetadata not set\");\n    }\n\n    let arPlayerData = Object.entries(this.props.roomMetadata.players).map(([key, value]) => value);\n\n    const emptySeatID = arPlayerData.find(p => !p.name)?.id;\n    const alreadyJoined = arPlayerData.find(p => {\n      return p.id === this.props.playerData?.playerID && p.name === this.props.nickname;\n    });\n\n    if (!alreadyJoined && emptySeatID !== undefined && this.props.nickname && this.matchID) {\n      this.join(emptySeatID);\n    }\n  }\n\n  delayedStart() {\n    window.setTimeout(() => {\n      if (this.props.roomMetadata) {\n        this.props.startGame();\n      } else {\n        alert(\"There was an internal problem. Please try again.\");\n        this.props.history.push(\"/\");\n        return;\n      }\n    }, 2000);\n  }\n\n  render() {\n    let arPlayerData: Server.PlayerMetadata[] = [];\n    if (this.props.roomMetadata) {\n      arPlayerData = Object.entries(this.props.roomMetadata.players).map(([key, value]) => value);\n    }\n\n    return (\n      <LobbyPage>\n        <SmallLogo />\n        <ButtonLang />\n\n        <div className=\"Lobby__title\">\n          <Trans>Invite Players</Trans>\n        </div>\n        <div className=\"Lobby__subtitle\">\n          <Trans>Send a link to your friends to invite them to your game</Trans>\n        </div>\n        <LobbyLink />\n\n        <div className=\"Lobby__players\">\n          {this.props.roomMetadata ? (\n            arPlayerData.filter(player => player.name).map((player) => (\n              <div\n                key={player.id}\n                className=\"Lobby__player Lobby__player--active\"\n              >\n                {player.name} {player.name === this.props.nickname && \"(You)\"}\n              </div>\n            )\n            )\n          ) : (\n              <Trans>Loading...</Trans>\n            )}\n        </div>\n        <LobbyStatus\n          gameStarted={this.gameStarted}\n          isCreator={this.props.playerData?.playerID === 0 || false}\n          matchID={this.matchID}\n          playerData={this.props.playerData}\n          lobbyClient={this.props.lobbyClient}\n        />\n      </LobbyPage >\n    );\n  }\n};\nexport const GameLobbySetup = withRouter(RoomMetaDataHOC(GameLobbySetupRaw))\n","import React from \"react\";\nimport { LobbyPage } from \"components/LobbyPage\";\nimport { Logo } from \"components/Logo\";\nimport { ButtonLink } from \"components/Button\";\nimport { Trans } from \"react-i18next\";\nimport style from \"./style.module.scss\";\n\nexport const Welcome = () => {\n  return (\n    <LobbyPage>\n      <Logo className={style.logo} size=\"large\" />\n      <p className={style.text}>\n        <Trans>\n        Spirit Island is a cooperative, settler-destruction strategy game for 1 to 4 players designed by R. Eric Reuss and set in an alternate-history world around A.D. 1700. \n        </Trans>\n      </p>\n      <ButtonLink to=\"/create\" theme=\"orange\">\n        <Trans>Go!</Trans>\n      </ButtonLink>\n    </LobbyPage>\n  );\n};\n","import React from 'react';\nimport {\n  BrowserRouter,\n  Redirect,\n  Route,\n  Switch\n} from \"react-router-dom\";\n\nimport { LobbyClient } from 'boardgame.io/client';\nimport { SocketIO } from \"boardgame.io/multiplayer\";\nimport { Server } from \"boardgame.io\";\nimport { Client } from \"boardgame.io/react\";\n\nimport { isProduction, SERVER_URL } from \"config\";\nimport { SpiritIsland } from 'Game';\nimport { SpiritIslandBoard } from 'components/Board';\n\nimport { CreateGame } from 'components/CreateGame';\nimport { NicknameProps } from 'components/NicknameOverlay';\nimport { GameLobbySetup } from \"components/Lobby\";\nimport { Welcome } from \"components/Welcome\";\nimport \"./App.css\";\n\n\nexport interface StoredPlayerData {\n  playerID: number;\n  credential: string;\n  matchID: string;\n}\ninterface AppState {\n  matchID?: string\n  isRunning: boolean\n  playerData?: StoredPlayerData\n}\nconst CREDENTIALS_STORAGE_KEY = \"SPIRITISLANDWEB_CLIENT_CREDENTIALS\"\n\n\nexport class App extends React.Component<NicknameProps, AppState>\n{\n  lobbyClient: LobbyClient;\n  constructor(props: NicknameProps) {\n    super(props);\n    this.lobbyClient = new LobbyClient({ server: SERVER_URL });\n\n    //restore saved credentials\n    const encodedCredentials = localStorage.getItem(CREDENTIALS_STORAGE_KEY);\n    let storedCredentials: StoredPlayerData | undefined;\n    if (encodedCredentials) {\n      storedCredentials = JSON.parse(encodedCredentials)\n    }\n\n    this.state = { playerData: storedCredentials, isRunning: false }\n\n    this.newGame = this.newGame.bind(this);\n    this.storePlayerData = this.storePlayerData.bind(this);\n    this.startGame = this.startGame.bind(this);\n  }\n\n  newGame() {\n    if (!SpiritIsland.name) {\n      throw new Error(\"IllegalState game name not set\");\n    }\n    this.lobbyClient.createMatch(SpiritIsland.name, { numPlayers: SpiritIsland.maxPlayers||4 })\n      .then((x) => { this.setState({ matchID: x.matchID }) })\n      .catch((reason) => {\n        alert(\"There was a problem creating the match. Please try again.\");\n        console.log(\"Error creating new Game:\" + reason)\n        return;\n      });\n  }\n\n  storePlayerData(activeRoomPlayer: StoredPlayerData) {\n    localStorage.setItem(CREDENTIALS_STORAGE_KEY, JSON.stringify(activeRoomPlayer));\n\n    this.setState({\n      playerData: activeRoomPlayer\n    });\n  }\n\n  startGame() {\n    this.setState({\n      isRunning: true,\n    })\n  }\n\n\n  render() {\n    let matchID = this.state.matchID;\n\n    let roomPage: JSX.Element;\n    if (this.state.isRunning) {\n      const GameClient = Client({\n        game: SpiritIsland,\n        board: SpiritIslandBoard,\n        multiplayer: SocketIO({ server: SERVER_URL }),\n      });\n\n      roomPage = <GameClient\n        matchID={this.state.playerData?.matchID}\n        playerID={String(this.state.playerData?.playerID)}\n        credentials={this.state.playerData?.credential}\n        debug={!isProduction}\n      />\n    } else {\n      roomPage = (<GameLobbySetup\n        {...this.props}\n        lobbyClient={this.lobbyClient}\n        storePlayerData={this.storePlayerData}\n        playerData={this.state.playerData}\n        startGame={this.startGame}\n      />);\n    }\n    return (\n      <div className=\"App\" >\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\">\n              <Welcome />\n            </Route>\n\n            <Route exact path=\"/create\">\n              <CreateGame {...this.props} onCreateGameRoom={this.newGame} roomID={matchID} />\n            </Route>\n\n            <Route exact path=\"/rooms/:id\">\n              {roomPage}\n            </Route>\n\n            <Route>\n              <Redirect to=\"/\" />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { SetupNickname } from \"./SetupNickname\";\nimport { App } from \"components/App\";\n\nexport interface NicknameProps {\n    nickname: string;\n    requestChangeNickname: () => void;\n}\n\ninterface State {\n    nickname: string;\n    changeRequested: boolean;\n}\n\nconst NICKNAME_STORAGE_KEY = \"SPIRITISLANDWEB_NICKNAME\"\n\nexport class NicknameOverlay extends React.Component<{}, State> {\n    constructor(props: {}) {\n        super(props);\n        const savedNickname = localStorage.getItem(NICKNAME_STORAGE_KEY);\n        this.state = {\n            nickname: savedNickname || \"\",\n            changeRequested: false\n        };\n        this.setNickname = this.setNickname.bind(this);\n        this.onRequestChange = this.onRequestChange.bind(this);\n        this.resetRequest = this.resetRequest.bind(this);\n    }\n\n    setNickname(newNickname: string) {\n        this.setState({ nickname: newNickname });\n        this.setState({ changeRequested: false });\n        localStorage.setItem(NICKNAME_STORAGE_KEY, newNickname);\n    }\n\n    onRequestChange() {\n        this.setState({ changeRequested: true });\n    }\n\n    resetRequest() {\n        this.setState({ changeRequested: false });\n    }\n\n    render(): JSX.Element {\n        let result;\n        //if no nickname is set or nickname change is requested\n        if (this.state.changeRequested) {\n            // show nickname dilaog\n            result = (\n                <div>\n                    <SetupNickname nickname={this.state.nickname} onSubmit={this.setNickname} onBack={this.resetRequest} />\n                </div>\n            )\n        } else {\n            // show wrapped component\n            result = (\n                <App {...this.state} requestChangeNickname={this.onRequestChange} />\n            );\n        }\n\n        return (result);\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { NicknameOverlay } from 'components/NicknameOverlay';\n\nReactDOM.render(\n  <React.StrictMode>\n    <NicknameOverlay />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__2NB1i\",\"button--orange\":\"style_button--orange__1f8a3\",\"button--yellow\":\"style_button--yellow__9QVCF\",\"button--blue\":\"style_button--blue__3-VhK\",\"button--green\":\"style_button--green__2ohpW\",\"button--size-small\":\"style_button--size-small__1EiyD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lobbyPage\":\"style_lobbyPage__13am8\",\"smallLogo\":\"style_smallLogo__2HGMt\",\"githubLink\":\"style_githubLink__1Uify\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"style_text__1SbRS\",\"logo\":\"style_logo__1b3jO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__1k1f5\"};"],"sourceRoot":""}